{"ast":null,"code":"var _jsxFileName = \"/Users/alexgyurov/Development/final-project-frontend/src/components/Core.js\";\nimport React from 'react';\nimport Listener from './Listener';\n\nclass Core extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      letter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => this.tick(), 1000);\n    this.listener(); // listens to key presses\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n    setInterval(() => this.update_letter(), 2000);\n  }\n\n  update_letter() {\n    const keys = ['l', 'w', 'p', 'a', 'q'];\n    const next_letter = keys[Math.floor(Math.random() * keys.length)];\n    this.setState({\n      letter: next_letter\n    });\n  }\n\n  listener() {\n    window.addEventListener(\"keypress\", function (event) {\n      console.log(th);\n\n      if (event.key == this.letter) {\n        console.log('Good job!');\n      }\n    }, true);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Hello, world!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"It is \", this.state.date.toLocaleTimeString(), \".\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Quick! Press: \", this.state.letter));\n  }\n\n}\n\nexport default Core;","map":{"version":3,"sources":["/Users/alexgyurov/Development/final-project-frontend/src/components/Core.js"],"names":["React","Listener","Core","Component","constructor","props","state","date","Date","letter","componentDidMount","setInterval","tick","listener","setState","update_letter","keys","next_letter","Math","floor","random","length","window","addEventListener","event","console","log","th","key","render","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAP;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,WAAW,CACP,MAAM,KAAKC,IAAL,EADC,EAEP,IAFO,CAAX;AAKA,SAAKC,QAAL,GAPgB,CAOA;AACnB;;AAEDD,EAAAA,IAAI,GAAG;AACH,SAAKE,QAAL,CAAc;AACVP,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADI,KAAd;AAIAG,IAAAA,WAAW,CACP,MAAM,KAAKI,aAAL,EADC,EAEP,IAFO,CAAX;AAIH;;AAEDA,EAAAA,aAAa,GAAG;AACZ,UAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAb;AACA,UAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAhC,CAAD,CAAxB;AAEA,SAAKP,QAAL,CAAc;AACVL,MAAAA,MAAM,EAAEQ;AADE,KAAd;AAGH;;AAEDJ,EAAAA,QAAQ,GAAE;AACNS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,UAASC,KAAT,EAAgB;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;;AACA,UAAIH,KAAK,CAACI,GAAN,IAAa,KAAKnB,MAAtB,EAA8B;AAC1BgB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AAGJ,KAPD,EAOG,IAPH;AAQH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,kBAAhB,EAAX,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,KAAKxB,KAAL,CAAWG,MAA9B,CAHJ,CADJ;AAQH;;AAxD8B;;AA2DnC,eAAeP,IAAf","sourcesContent":["import React from 'react'\nimport Listener from './Listener'\n\nclass Core extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date(), letter: \"\"};\n    }\n\n    componentDidMount() {\n\n        setInterval(\n            () => this.tick(),\n            1000\n        );\n\n        this.listener() // listens to key presses\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n\n        setInterval(\n            () => this.update_letter(),\n            2000\n        );\n    }\n\n    update_letter() {\n        const keys = ['l', 'w', 'p', 'a', 'q']\n        const next_letter = keys[Math.floor(Math.random() * keys.length)];\n\n        this.setState({\n            letter: next_letter\n        });\n    }\n\n    listener(){\n        window.addEventListener(\"keypress\", function(event) {\n            console.log(th)\n            if (event.key == this.letter) {\n                console.log('Good job!')\n            }\n\n\n        }, true);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Hello, world!</h1>\n                <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n                <h2>Quick! Press: {this.state.letter}</h2>\n\n            </div>\n        )\n    }\n}\n\nexport default Core"]},"metadata":{},"sourceType":"module"}