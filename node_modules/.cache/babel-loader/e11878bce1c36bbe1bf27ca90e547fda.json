{"ast":null,"code":"var _jsxFileName = \"/Users/alexgyurov/Development/final-project-frontend/src/App.js\";\nimport React from 'react';\nimport Core from './components/Core';\nimport './assests/main.css';\nimport './assests/background.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    };\n  }\n\n  componentDidMount() {\n    let canvas = this.refs.canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.listener();\n    this.startScreen();\n  }\n\n  listener() {\n    let self = this;\n    window.addEventListener(\"keypress\", function (event) {\n      if (event.code === 'Space') {\n        self.clearScreen();\n        self.gameScreen();\n      }\n    });\n  }\n\n  clearScreen() {\n    this.ctx.clearRect(0, 0, 1024, 600);\n  }\n\n  startScreen() {\n    this.ctx.font = \"40px Courier\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText('KEYBOARD HERO', 512, 200);\n    this.ctx.fillStyle = \"blue\";\n    this.ctx.fillText('PRESS SPACE TO PLAY', 512, 300);\n  }\n\n  gameScreen() {\n    this.scoreAssest();\n    this.ctx.strokeStyle = \"#ffffff\";\n    this.ctx.lineWidth = 1;\n    this.ctx.moveTo(0, 500);\n    this.ctx.lineTo(1024, 500);\n    this.ctx.stroke();\n  }\n\n  scoreAssest() {\n    this.ctx.font = \"20px Courier\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.textAlign = \"right\";\n    this.ctx.fillText('Score: []', 1024, 30);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: 1024,\n      height: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexgyurov/Development/final-project-frontend/src/App.js"],"names":["React","Core","App","Component","constructor","props","state","page","componentDidMount","canvas","refs","ctx","getContext","listener","startScreen","self","window","addEventListener","event","code","clearScreen","gameScreen","clearRect","font","fillStyle","textAlign","fillText","scoreAssest","strokeStyle","lineWidth","moveTo","lineTo","stroke","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,oBAAP;AACA,OAAO,0BAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAvB;AACA,SAAKE,GAAL,GAAWF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAX;AAEA,SAAKC,QAAL;AACA,SAAKC,WAAL;AAEH;;AAEDD,EAAAA,QAAQ,GAAG;AACP,QAAIE,IAAI,GAAG,IAAX;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,UAAUC,KAAV,EAAiB;AACjD,UAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AACxBJ,QAAAA,IAAI,CAACK,WAAL;AACAL,QAAAA,IAAI,CAACM,UAAL;AACH;AACJ,KALD;AAMH;;AAEDD,EAAAA,WAAW,GAAG;AACV,SAAKT,GAAL,CAASW,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,GAA/B;AACH;;AAEDR,EAAAA,WAAW,GAAG;AACV,SAAKH,GAAL,CAASY,IAAT,GAAgB,cAAhB;AACA,SAAKZ,GAAL,CAASa,SAAT,GAAqB,KAArB;AACA,SAAKb,GAAL,CAASc,SAAT,GAAqB,QAArB;AACA,SAAKd,GAAL,CAASe,QAAT,CAAkB,eAAlB,EAAmC,GAAnC,EAAwC,GAAxC;AAEA,SAAKf,GAAL,CAASa,SAAT,GAAqB,MAArB;AACA,SAAKb,GAAL,CAASe,QAAT,CAAkB,qBAAlB,EAAyC,GAAzC,EAA8C,GAA9C;AACH;;AAEDL,EAAAA,UAAU,GAAG;AACT,SAAKM,WAAL;AAEA,SAAKhB,GAAL,CAASiB,WAAT,GAAuB,SAAvB;AACA,SAAKjB,GAAL,CAASkB,SAAT,GAAqB,CAArB;AACA,SAAKlB,GAAL,CAASmB,MAAT,CAAgB,CAAhB,EAAmB,GAAnB;AACA,SAAKnB,GAAL,CAASoB,MAAT,CAAgB,IAAhB,EAAsB,GAAtB;AACA,SAAKpB,GAAL,CAASqB,MAAT;AACH;;AAEDL,EAAAA,WAAW,GAAG;AACV,SAAKhB,GAAL,CAASY,IAAT,GAAgB,cAAhB;AACA,SAAKZ,GAAL,CAASa,SAAT,GAAqB,OAArB;AACA,SAAKb,GAAL,CAASc,SAAT,GAAqB,OAArB;AACA,SAAKd,GAAL,CAASe,QAAT,CAAkB,WAAlB,EAA+B,IAA/B,EAAqC,EAArC;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,IAA5B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AAlE6B;;AAqElC,eAAe/B,GAAf","sourcesContent":["import React from 'react'\nimport Core from './components/Core'\nimport './assests/main.css'\nimport './assests/background.png'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0\n        }\n    }\n\n    componentDidMount() {\n        let canvas = this.refs.canvas\n        this.ctx = canvas.getContext(\"2d\");\n\n        this.listener()\n        this.startScreen()\n\n    }\n\n    listener() {\n        let self = this\n\n        window.addEventListener(\"keypress\", function (event) {\n            if (event.code === 'Space') {\n                self.clearScreen()\n                self.gameScreen()\n            }\n        })\n    }\n\n    clearScreen() {\n        this.ctx.clearRect(0, 0, 1024, 600);\n    }\n\n    startScreen() {\n        this.ctx.font = \"40px Courier\"\n        this.ctx.fillStyle = \"red\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText('KEYBOARD HERO', 512, 200)\n\n        this.ctx.fillStyle = \"blue\";\n        this.ctx.fillText('PRESS SPACE TO PLAY', 512, 300)\n    }\n\n    gameScreen() {\n        this.scoreAssest()\n\n        this.ctx.strokeStyle = \"#ffffff\";\n        this.ctx.lineWidth = 1;\n        this.ctx.moveTo(0, 500);\n        this.ctx.lineTo(1024, 500);\n        this.ctx.stroke();\n    }\n\n    scoreAssest() {\n        this.ctx.font = \"20px Courier\"\n        this.ctx.fillStyle = \"white\";\n        this.ctx.textAlign = \"right\";\n        this.ctx.fillText('Score: []', 1024, 30)\n    }\n\n    render() {\n        return(\n            <div>\n                <canvas ref=\"canvas\" width={1024} height={600} />\n\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}